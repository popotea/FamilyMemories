@using FamilyMemories.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext
@{
 var userName = User.Identity?.Name ?? "";
 var menus = await DbContext.Menus.Where(m => m.IsActive && m.ParentId == null).OrderBy(m => m.SortOrder).ToListAsync();
}
<!doctype html>
<html lang="zh-TW">
<head>
 <meta charset="utf-8" />
 <meta name="viewport" content="width=device-width, initial-scale=1" />
 <title>@ViewData["Title"] - Admin - FamilyMemories</title>

 <!-- Bootstrap5 -->
 <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
 <!-- Bootstrap Icons (optional) -->
 <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
 <!-- AdminLTE v5 -->
 <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/admin-lte@5.0.1/dist/css/adminlte.min.css" />
 <link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />
 <link rel="stylesheet" href="~/css/theme.css" asp-append-version="true" />
</head>
<body class="hold-transition sidebar-mini layout-fixed">
 <div class="wrapper">
 <!-- Navbar -->
 <nav class="main-header navbar navbar-expand navbar-dark">
 <div class="container-fluid">
 <ul class="navbar-nav">
 <li class="nav-item">
 <button class="btn btn-link nav-link" id="sidebarToggle" aria-label="Toggle sidebar">
 <i class="bi bi-list" style="font-size:1.5rem;"></i>
 </button>
 </li>
 <li class="nav-item d-none d-sm-inline-block">
 <a href="/" class="nav-link">回到首頁</a>
 </li>
 </ul>

 <ul class="navbar-nav ms-auto align-items-center">
 <li class="nav-item me-2">
 <div class="form-check form-switch text-light">
 <input class="form-check-input" type="checkbox" id="themeSwitch">
 <label class="form-check-label small" for="themeSwitch">日夜</label>
 </div>
 </li>
 <li class="nav-item dropdown">
 <a class="nav-link" data-bs-toggle="dropdown" href="#">
 @userName
 </a>
 <ul class="dropdown-menu dropdown-menu-end">
 <li><a class="dropdown-item" asp-area="" asp-controller="Account" asp-action="Logout">登出</a></li>
 </ul>
 </li>
 </ul>
 </div>
 </nav>
 <!-- /.navbar -->

 <!-- Main Sidebar Container -->
 <aside class="main-sidebar sidebar-dark-primary elevation-4">
 <!-- Brand Logo -->
 <a href="/" class="brand-link">
 <i class="bi bi-camera-fill ms-2 me-2"></i>
 <span class="brand-text fw-light">FamilyMemories</span>
 </a>

 <!-- Sidebar -->
 <div class="sidebar">
 <nav class="mt-2">
 <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
 @if (menus.Any())
 {
 @foreach (var menu in menus)
 {
 var subMenus = await DbContext.Menus.Where(m => m.IsActive && m.ParentId == menu.Id).OrderBy(m => m.SortOrder).ToListAsync();
 <li class="nav-item @(subMenus.Any() ? "has-treeview" : "")">
 <a class="nav-link" href="@menu.Url">
 <i class="bi bi-circle me-2"></i>
 <p>@menu.Title</p>
 </a>
 @if (subMenus.Any())
 {
 <ul class="nav nav-treeview">
 @foreach (var sub in subMenus)
 {
 <li class="nav-item">
 <a class="nav-link" href="@sub.Url">
 <i class="bi bi-dot me-2"></i>
 <p>@sub.Title</p>
 </a>
 </li>
 }
 </ul>
 }
 </li>
 }
 }
 else
 {
 <li class="nav-item">
 <a class="nav-link" asp-controller="Admin" asp-action="Index"><i class="bi bi-speedometer2 me-2"></i><p>後台首頁</p></a>
 </li>
 <li class="nav-item">
 <a class="nav-link" asp-controller="Admin" asp-action="Users"><i class="bi bi-people me-2"></i><p>使用者管理</p></a>
 </li>
 <li class="nav-item">
 <a class="nav-link" asp-controller="Admin" asp-action="Roles"><i class="bi bi-shield-lock me-2"></i><p>角色管理</p></a>
 </li>
 <li class="nav-item">
 <a class="nav-link" asp-controller="Menu" asp-action="Index"><i class="bi bi-menu-button-wide me-2"></i><p>選單維護</p></a>
 </li>
 <li class="nav-item">
 <a class="nav-link" asp-controller="Home" asp-action="Index"><i class="bi bi-images me-2"></i><p>回憶牆</p></a>
 </li>
 }
 </ul>
 </nav>
 </div>
 <!-- /.sidebar -->
 </aside>

 <!-- Content Wrapper. Contains page content -->
 <div class="content-wrapper">
 <!-- Content Header (Page header) -->
 <div class="content-header">
 <div class="container-fluid">
 <div class="row mb-2">
 <div class="col-sm-6">
 <h1 class="m-0">@ViewData["Title"]</h1>
 </div>
 </div>
 </div>
 </div>

 <!-- Main content -->
 <section class="content">
 <div class="container-fluid px-4 py-4">
 @RenderBody()
 </div>
 </section>
 </div>
 <!-- /.content-wrapper -->

 <footer class="main-footer">
 <div class="float-end d-none d-sm-inline">FamilyMemories</div>
 <strong>&copy; @DateTime.Now.Year - FamilyMemories</strong>
 </footer>
 </div>

 <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
 <script src="https://cdn.jsdelivr.net/npm/admin-lte@5.0.1/dist/js/adminlte.min.js"></script>
 <script>
 // apply saved theme or system preference
 (function () {
 const key = 'fm_theme';
 const saved = localStorage.getItem(key);
 const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
 const mode = saved || (prefersDark ? 'dark' : 'light');
 if (mode === 'light') document.body.classList.add('theme-light');
 else document.body.classList.remove('theme-light');
 document.getElementById('themeSwitch').checked = (mode === 'light');

 document.getElementById('themeSwitch').addEventListener('change', function () {
 if (this.checked) {
 document.body.classList.add('theme-light');
 localStorage.setItem(key, 'light');
 } else {
 document.body.classList.remove('theme-light');
 localStorage.setItem(key, 'dark');
 }
 });
})();

 // highlight active nav link based on current location
 (function () {
 try {
 var path = window.location.pathname.toLowerCase();
 document.querySelectorAll('.nav-sidebar .nav-link').forEach(function (el) {
 var href = el.getAttribute('href');
 if (!href) return;
 if (href === path || path.startsWith(href)) {
 el.classList.add('active');
 }
 });
 } catch (e) {
 // ignore
 }
 })();

 // Sidebar toggle for mobile
 (function () {
 const sidebar = document.querySelector('.main-sidebar');
 const toggleBtn = document.getElementById('sidebarToggle');
 if (toggleBtn && sidebar) {
 toggleBtn.addEventListener('click', function () {
 sidebar.classList.toggle('show-mobile');
 });
 }
 })();
 </script>
 @RenderSection("Scripts", required: false)
</body>
</html>