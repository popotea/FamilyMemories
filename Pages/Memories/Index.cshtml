@page
@model IndexModel
@{
    ViewData["Title"] = "我們的回憶";
}

<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Microsoft JhengHei', 'PingFang TC', sans-serif;
            background-color: #000;
            color: #fff;
            min-height: 100vh;
        }

        /* 頂部標題欄 */
        .header {
            position: sticky;
            top: 0;
            z-index: 40;
            background: linear-gradient(to bottom, rgba(0,0,0,0.8), transparent);
            backdrop-filter: blur(10px);
            padding: 1.5rem 1rem;
        }

        .header h1 {
            text-align: center;
            font-size: 1.875rem;
            margin-bottom: 1rem;
        }

        /* 新增回憶按鈕 */
        .add-memory-btn {
            position: fixed;
            top: 1rem;
            right: 1rem;
            z-index: 50;
            width: 3rem;
            height: 3rem;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: rgba(255,255,255,0.2);
            backdrop-filter: blur(10px);
            border: none;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s;
            color: white;
        }

        .add-memory-btn:hover {
            background-color: rgba(255,255,255,0.3);
            transform: scale(1.1);
        }

        /* 篩選器 */
        .filter-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 0.5rem;
        }

        .filter-btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 9999px;
            font-size: 0.875rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            background-color: rgba(255,255,255,0.2);
            color: white;
        }

        .filter-btn:hover {
            background-color: rgba(255,255,255,0.3);
        }

        .filter-btn.active {
            background-color: white;
            color: black;
        }

        /* 相片網格 */
        .gallery-container {
            max-width: 1280px;
            margin: 0 auto;
            padding: 0 0.5rem 2rem;
        }

        .gallery-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 0.5rem;
        }

        @@media (min-width: 768px) {
            .gallery-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 0.75rem;
            }
            .header h1 {
                font-size: 2.25rem;
            }
        }

        @@media (min-width: 1024px) {
            .gallery-grid {
                grid-template-columns: repeat(3, 1fr);
            }
        }

        /* 相片卡片 */
        .photo-card {
            position: relative;
            overflow: hidden;
            cursor: pointer;
            aspect-ratio: 4/3;
        }

        @@media (min-width: 768px) {
            .photo-card {
                aspect-ratio: 3/4;
            }
        }

        .photo-card img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.7s;
        }

        .photo-card:hover img {
            transform: scale(1.1);
        }

        .photo-overlay {
            position: absolute;
            inset: 0;
            background: linear-gradient(to top, rgba(0,0,0,0.8), rgba(0,0,0,0.2), transparent);
            opacity: 0.8;
            transition: opacity 0.3s;
        }

        .photo-card:hover .photo-overlay {
            opacity: 1;
        }

        .photo-info {
            position: absolute;
            inset: 0;
            padding: 1rem;
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            transform: translateY(0.5rem);
            transition: transform 0.3s;
        }

        .photo-card:hover .photo-info {
            transform: translateY(0);
        }

        .photo-tags {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 0.5rem;
            flex-wrap: wrap;
        }

        .photo-tag {
            background-color: rgba(255,255,255,0.3);
            backdrop-filter: blur(10px);
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.75rem;
        }

        .photo-date {
            font-size: 0.75rem;
            color: rgba(255,255,255,0.8);
        }

        .photo-title {
            font-size: 1.125rem;
            font-weight: bold;
            margin-bottom: 0.25rem;
        }

        @@media (min-width: 768px) {
            .photo-title {
                font-size: 1.25rem;
            }
        }

        .photo-description {
            font-size: 0.875rem;
            color: rgba(255,255,255,0.9);
            opacity: 0;
            transition: opacity 0.3s;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .photo-card:hover .photo-description {
            opacity: 1;
        }

        /* Modal 全螢幕檢視 */
        .modal {
            display: none;
            position: fixed;
            inset: 0;
            z-index: 50;
            background-color: black;
        }

        .modal.active {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        @@media (min-width: 768px) {
            .modal-content {
                flex-direction: row;
            }
        }

        .modal-image-container {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 1rem;
        }

        .modal-image {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }

        .modal-info {
            width: 100%;
            background: linear-gradient(to top, rgba(0,0,0,0.95), rgba(0,0,0,0.8));
            backdrop-filter: blur(10px);
            padding: 1.5rem;
            overflow-y: auto;
        }

        @@media (min-width: 768px) {
            .modal-info {
                width: 24rem;
                background: linear-gradient(to left, rgba(0,0,0,0.95), rgba(0,0,0,0.8));
                padding: 2rem;
            }
        }

        .modal-btn {
            position: absolute;
            z-index: 50;
            width: 2.5rem;
            height: 2.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: rgba(255,255,255,0.2);
            backdrop-filter: blur(10px);
            border: none;
            border-radius: 9999px;
            color: white;
            cursor: pointer;
            transition: all 0.3s;
        }

        .modal-btn:hover {
            background-color: rgba(255,255,255,0.3);
        }

        .modal-close {
            top: 1rem;
            right: 1rem;
        }

        .modal-prev {
            left: 1rem;
        }

        .modal-next {
            right: 1rem;
        }

        @@media (min-width: 768px) {
            .modal-btn {
                width: 3rem;
                height: 3rem;
            }
        }

        .modal-date {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: rgba(255,255,255,0.7);
            font-size: 0.875rem;
            margin-bottom: 1.5rem;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 1rem;
        }

        @@media (min-width: 768px) {
            .modal-title {
                font-size: 1.875rem;
            }
        }

        .modal-description {
            color: rgba(255,255,255,0.9);
            line-height: 1.6;
            font-size: 1rem;
        }

        @@media (min-width: 768px) {
            .modal-description {
                font-size: 1.125rem;
            }
        }

        .modal-tags {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 1.5rem;
            flex-wrap: wrap;
        }

        .modal-tag {
            background-color: rgba(255,255,255,0.2);
            backdrop-filter: blur(10px);
            padding: 0.5rem 1rem;
            border-radius: 9999px;
            font-size: 0.875rem;
        }

        .modal-footer {
            margin-top: 2rem;
            padding-top: 1.5rem;
            border-top: 1px solid rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: space-between;
            color: rgba(255,255,255,0.6);
            font-size: 0.875rem;
        }

        /* 空狀態 */
        .empty-state {
            text-align: center;
            padding: 5rem 0;
            color: rgba(255,255,255,0.6);
            font-size: 1.125rem;
        }

        /* SVG Icons */
        .icon {
            width: 1rem;
            height: 1rem;
            display: inline-block;
            vertical-align: middle;
        }

        .icon-lg {
            width: 1.25rem;
            height: 1.25rem;
        }

        /* Loading state */
        .loading {
            text-align: center;
            padding: 2rem;
            color: rgba(255,255,255,0.6);
        }

        /* 回到列表按鈕 */
        .back-btn {
            position: fixed;
            top: 1rem;
            left: 1rem;
            z-index: 50;
            width: 3rem;
            height: 3rem;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: rgba(255,255,255,0.2);
            backdrop-filter: blur(10px);
            border: none;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s;
            color: white;
            text-decoration: none;
        }

        .back-btn:hover {
            background-color: rgba(255,255,255,0.3);
            transform: scale(1.1);
        }
    </style>
</head>
<body>
    <!-- 回到首頁按鈕 -->
    <a asp-page="/Index" class="back-btn" title="回到首頁">
        <svg class="icon-lg" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
        </svg>
    </a>

    <!-- 新增回憶按鈕 -->
    <a asp-page="Create" class="add-memory-btn" title="新增回憶">
        <svg class="icon-lg" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
        </svg>
    </a>

    <!-- 頂部標題欄 -->
    <div class="header">
        <h1>@ViewData["Title"]</h1>
        <div class="filter-container" id="filterContainer">
            <!-- 篩選按鈕將由 JavaScript 動態生成 -->
        </div>
    </div>

    <!-- 相片網格 -->
    <div class="gallery-container">
        <div class="loading">
            載入中...
        </div>
        <div class="gallery-grid" id="galleryGrid" style="display: none;">
            <!-- 由 JavaScript 動態生成 -->
        </div>
        <div class="empty-state" id="emptyState" style="display: none;">
            還沒有任何回憶<br>
            <a asp-page="Create" class="text-white text-decoration-underline">開始建立第一個回憶</a>
        </div>
    </div>

    <!-- Modal 全螢幕檢視 -->
    <div class="modal" id="photoModal">
        <button class="modal-btn modal-close" id="modalClose">
            <svg class="icon-lg" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
            </svg>
        </button>

        <div class="modal-content">
            <div class="modal-image-container">
                <img class="modal-image" id="modalImage" src="" alt="">
            </div>
            <div class="modal-info">
                <div class="modal-date">
                    <svg class="icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                    </svg>
                    <span id="modalDate"></span>
                </div>
                <h2 class="modal-title" id="modalTitle"></h2>
                <div class="modal-tags" id="modalTags">
                    <span class="modal-tag">家庭</span>
                </div>
                <p class="modal-description" id="modalDescription"></p>
                <div class="modal-footer">
                    <div class="modal-actions">
                        <a asp-page="./Edit" asp-route-id="" id="editLink" class="text-white text-decoration-none me-3">
                            <svg class="icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                            </svg>
                            編輯
                        </a>
                        <a asp-page="./Delete" asp-route-id="" id="deleteLink" class="text-danger text-decoration-none">
                            <svg class="icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                            </svg>
                            刪除
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentMemoryId = null;
        let allMemories = [];
        let currentFilter = 'all';

        // 載入回憶資料 (前後端分離 - 呼叫 API)
        async function loadMemories() {
            try {
                const response = await fetch('/api/memories', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    credentials: 'same-origin'  // 包含認證資訊
                });

                if (response.ok) {
                    allMemories = await response.json();
                    renderGallery();
                } else if (response.status === 401) {
                    // 未授權，重新導向到登入頁面
                    window.location.href = '/Identity/Account/Login';
                } else {
                    console.error('載入回憶資料失敗:', response.statusText);
                    showEmptyState();
                }
            } catch (error) {
                console.error('API 呼叫錯誤:', error);
                showEmptyState();
            } finally {
                // 隱藏載入提示
                document.querySelector('.loading').style.display = 'none';
            }
        }

        // 渲染相片網格
        function renderGallery() {
            const gallery = document.getElementById('galleryGrid');
            gallery.innerHTML = '';

            const filteredMemories = currentFilter === 'all'
                ? allMemories
                : allMemories.filter(m => m.title.includes(currentFilter) ||
                                        (m.description && m.description.includes(currentFilter)));

            if (filteredMemories.length === 0) {
                showEmptyState();
                return;
            }

            hideEmptyState();

            filteredMemories.forEach((memory, index) => {
                const card = document.createElement('div');
                card.className = 'photo-card';
                card.onclick = () => openModal(
                    memory.id,
                    memory.title,
                    memory.description,
                    memory.imagePath,
                    formatDate(memory.date)
                );

                let imageHtml = '';
                if (memory.imagePath) {
                    imageHtml = `<img src="/uploads/${memory.imagePath}" alt="${memory.title}">`;
                } else {
                    imageHtml = `
                        <div style="width: 100%; height: 100%; background: linear-gradient(45deg, #333, #666); display: flex; align-items: center; justify-content: center; color: #999;">
                            <svg class="icon-lg" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M4 5h16a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1zM4 7v10h16V7H4z"/>
                                <path d="M10 9a1 1 0 0 1 1 1v2h2a1 1 0 1 1 0 2h-2v2a1 1 0 1 1-2 0v-2H7a1 1 0 1 1 0-2h2v-2a1 1 0 0 1 1-1z"/>
                            </svg>
                        </div>
                    `;
                }

                const formattedDate = new Date(memory.date).toISOString().split('T')[0].replace(/-/g, '/');

                card.innerHTML = `
                    ${imageHtml}
                    <div class="photo-overlay"></div>
                    <div class="photo-info">
                        <div class="photo-tags">
                            <span class="photo-tag">家庭</span>
                            <span class="photo-date">${formattedDate}</span>
                        </div>
                        <h3 class="photo-title">${memory.title}</h3>
                        ${memory.description ? `<p class="photo-description">${memory.description}</p>` : ''}
                    </div>
                `;

                gallery.appendChild(card);
            });

            // 顯示網格
            gallery.style.display = 'grid';
        }

        // 顯示空狀態
        function showEmptyState() {
            document.getElementById('galleryGrid').style.display = 'none';
            document.getElementById('emptyState').style.display = 'block';
        }

        // 隱藏空狀態
        function hideEmptyState() {
            document.getElementById('emptyState').style.display = 'none';
        }

        // 格式化日期
        function formatDate(dateString) {
            const date = new Date(dateString);
            const year = date.getFullYear();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const day = String(date.getDate()).padStart(2, '0');
            return `${year}年${month}月${day}日`;
        }

        function openModal(memoryId, title, description, imagePath, date) {
            currentMemoryId = memoryId;

            // 設定圖片
            if (imagePath) {
                document.getElementById('modalImage').src = '/uploads/' + imagePath;
                document.getElementById('modalImage').style.display = 'block';
            } else {
                document.getElementById('modalImage').style.display = 'none';
            }

            // 設定文字內容
            document.getElementById('modalTitle').textContent = title;
            document.getElementById('modalDescription').textContent = description || '沒有說明';
            document.getElementById('modalDate').textContent = date;

            // 設定編輯和刪除連結
            document.getElementById('editLink').href = '/Memories/Edit?id=' + memoryId;
            document.getElementById('deleteLink').href = '/Memories/Delete?id=' + memoryId;

            // 顯示 Modal
            document.getElementById('photoModal').classList.add('active');
            document.body.style.overflow = 'hidden';
        }

        function closeModal() {
            document.getElementById('photoModal').classList.remove('active');
            document.body.style.overflow = 'auto';
            currentMemoryId = null;
        }

        // 事件監聽器
        document.addEventListener('DOMContentLoaded', function() {
            // 載入回憶資料
            loadMemories();

            // 關閉按鈕
            document.getElementById('modalClose').addEventListener('click', closeModal);

            // 點擊背景關閉
            document.getElementById('photoModal').addEventListener('click', function(e) {
                if (e.target === this) {
                    closeModal();
                }
            });

            // ESC 鍵關閉
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape' && document.getElementById('photoModal').classList.contains('active')) {
                    closeModal();
                }
            });
        });
    </script>
</body>
</html>
